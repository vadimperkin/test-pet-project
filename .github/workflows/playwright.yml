name: Playwright Tests

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pages: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1/2, 2/2]
    # outputs:
    #   artifact_name: ${{ steps.output.outputs.artifact_name }}
    #   artifact_path: ${{ steps.output.outputs.artifact_path }}
    env:
      USERNAME: ${{ secrets.USERNAME }}
      PASSWORD: ${{ secrets.PASSWORD }}
      API_KEY: ${{ secrets.API_KEY }}
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install Chrome Browser
        run: npx playwright install chromium

      - name: Check Eslint
        run: npm run eslint

      - name: Run Playwright tests (Shard ${{ matrix.shard }})
        id: test
        run: npx playwright test --shard=${{ matrix.shard }}

      - name: Set sanitized shard name
        run: echo "SHARD_NAME=$(echo ${{ matrix.shard }} | tr '/' '-')" >> $GITHUB_ENV

      - name: Ensure report directory exists
        run: mkdir -p playwright-report

      - name: Upload artifact
        id: upload
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-shard-${{ env.SHARD_NAME }}
          path: playwright-report/
          retention-days: 30

      # - name: Set output
      #   id: output
      #   run: |
      #     echo "artifact_name=playwright-report-shard-${{ env.SHARD_NAME }}" >> $GITHUB_ENV
      #     echo "artifact_path=playwright-report" >> $GITHUB_ENV

  merge_reports:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.output.outputs.artifact_name }}
      artifact_path: ${{ steps.output.outputs.artifact_path }}
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Download all shard reports 1-2
        uses: actions/download-artifact@v4
        with:
          name: playwright-report-shard-1-2
          path: merged-report/shard-1

      - name: Unzip shard 1-2 reports
        run: unzip -q merged-report/shard-1/*.zip -d merged-report/shard-1

      - name: Download all shard reports 2-2
        uses: actions/download-artifact@v4
        with:
          name: playwright-report-shard-2-2
          path: merged-report/shard-2
          
      - name: Unzip shard 2-2 reports
        run: unzip -q merged-report/shard-2/*.zip -d merged-report/shard-2

      - name: Check contents of shard 1
        run: ls -la merged-report/shard-1
        
      - name: Check contents of shard 2
        run: ls -la merged-report/shard-2
        
      - name: Merge Playwright reports
        run: |
          npx playwright merge-reports merged-report/shard-1 merged-report/shard-2 --reporter html merged-playwright-reports/final

      - name: Upload merged report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-merged
          path: merged-playwright-reports/final
          retention-days: 30

      - name: Set output
        id: output
        run: |
          echo "artifact_name=playwright-report-merged" >> $GITHUB_ENV
          echo "artifact_path=merged-playwright-reports/final" >> $GITHUB_ENV

  deploy_report:
    needs: merge_reports
    uses: ./.github/workflows/reusable-report.yml
    with:
      artifact_name: ${{ needs.merge_reports.outputs.artifact_name }}
      path: ${{ needs.merge_reports.outputs.artifact_path }}
      publish_branch: gh-pages

  # send_report:
  #   needs: deploy_report
  #   runs-on: ubuntu-latest
  #   env:
  #     SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
  #     SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
  #     EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
  #     EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
  #   steps:
  #     - name: Get code
  #       uses: actions/checkout@v4
  #     - name: Setup Node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #     - name: Send test report email
  #       run: |
  #         npm install nodemailer
  #         node helpers/reportSender.js
